//
//  Contacts.swift
//  Resume
//
//  Created by –ê–ª–∫–µ–∫—Å–∞–Ω–¥—Ä –°—Ç–µ–ø–∞–Ω–æ–≤ on 24.08.2025.
//

import SwiftUI

struct Contacts1: View {
    // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Ñ–æ—Ä–º—ã –æ—Ç MainView
    // ObservedObject –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–±–Ω–æ–≤–ª—è–µ—Ç UI –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö
    @ObservedObject var formData: SurveyFormData
    
    var body: some View {
        VStack(spacing: 20) {
            // –ó–∞–≥–æ–ª–æ–≤–æ–∫ —ç–∫—Ä–∞–Ω–∞
            headerSection
            
            // –û—Å–Ω–æ–≤–Ω–∞—è —Ñ–æ—Ä–º–∞ –≤ ScrollView –¥–ª—è –¥–ª–∏–Ω–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
            ScrollView {
                formSection
            }
        }
        .padding()
        .onAppear {
            print("Contacts —ç–∫—Ä–∞–Ω –∑–∞–≥—Ä—É–∂–µ–Ω")
            print("–¢–µ–∫—É—â–∏–µ –¥–∞–Ω–Ω—ã–µ: email='\(formData.email)', phone='\(formData.phone)'")
        }
    }
    
    // MARK: - –ó–∞–≥–æ–ª–æ–≤–æ–∫ —ç–∫—Ä–∞–Ω–∞
    
    private var headerSection: some View {
        VStack(spacing: 15) {
            // –ò–∫–æ–Ω–∫–∞
            Image(systemName: "envelope.circle.fill")
                .font(.system(size: 60))
                .foregroundColor(.green)
            
            // –ó–∞–≥–æ–ª–æ–≤–æ–∫
            Text("–ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è")
                .font(.title2)
                .fontWeight(.bold)
                .multilineTextAlignment(.center)
            
            // –û–ø–∏—Å–∞–Ω–∏–µ
            Text("–£–∫–∞–∂–∏—Ç–µ —Å–ø–æ—Å–æ–±—ã —Å–≤—è–∑–∏ —Å –≤–∞–º–∏")
                .font(.subheadline)
                .foregroundColor(.secondary)
                .multilineTextAlignment(.center)
                .lineSpacing(4)
        }
    }
    
    // MARK: - –§–æ—Ä–º–∞ –≤–≤–æ–¥–∞ –∫–æ–Ω—Ç–∞–∫—Ç–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
    
    private var formSection: some View {
        VStack(spacing: 25) {
            // Email (–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–µ –ø–æ–ª–µ)
            VStack(alignment: .leading, spacing: 8) {
                HStack {
                    Text("Email")
                        .font(.headline)
                        .foregroundColor(.primary)
                    
                    // –ó–≤–µ–∑–¥–æ—á–∫–∞ –¥–ª—è –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–≥–æ –ø–æ–ª—è
                    Text("*")
                        .foregroundColor(.red)
                        .font(.headline)
                }
                
                // TextField –ø—Ä–∏–≤—è–∑–∞–Ω –∫ formData.email
                TextField("example@mail.com", text: $formData.email)
                    .textFieldStyle(RoundedBorderTextFieldStyle())
                    .keyboardType(.emailAddress) // –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è email
                    .autocapitalization(.none) // –û—Ç–∫–ª—é—á–∞–µ–º –∞–≤—Ç–æ–∑–∞–≥–ª–∞–≤–Ω—ã–µ –¥–ª—è email
                    .autocorrectionDisabled() // –û—Ç–∫–ª—é—á–∞–µ–º –∞–≤—Ç–æ–∫–æ—Ä—Ä–µ–∫—Ü–∏—é
                    .font(.body)
            }
            
            // –¢–µ–ª–µ—Ñ–æ–Ω (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–µ –ø–æ–ª–µ)
            VStack(alignment: .leading, spacing: 8) {
                Text("–¢–µ–ª–µ—Ñ–æ–Ω")
                    .font(.headline)
                    .foregroundColor(.primary)
                
                // TextField –ø—Ä–∏–≤—è–∑–∞–Ω –∫ formData.phone
                TextField("+7 (123) 456-78-90", text: $formData.phone)
                    .textFieldStyle(RoundedBorderTextFieldStyle())
                    .keyboardType(.phonePad) // –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è —Ç–µ–ª–µ—Ñ–æ–Ω–∞
                    .font(.body)
            }
            
            // –í–µ–±-—Å–∞–π—Ç (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–µ –ø–æ–ª–µ)
            VStack(alignment: .leading, spacing: 8) {
                Text("–í–µ–±-—Å–∞–π—Ç")
                    .font(.headline)
                    .foregroundColor(.primary)
                
                // TextField –ø—Ä–∏–≤—è–∑–∞–Ω –∫ formData.website
                TextField("https://your-website.com", text: $formData.website)
                    .textFieldStyle(RoundedBorderTextFieldStyle())
                    .keyboardType(.URL) // –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è URL
                    .autocapitalization(.none) // –û—Ç–∫–ª—é—á–∞–µ–º –∞–≤—Ç–æ–∑–∞–≥–ª–∞–≤–Ω—ã–µ –¥–ª—è URL
                    .autocorrectionDisabled() // –û—Ç–∫–ª—é—á–∞–µ–º –∞–≤—Ç–æ–∫–æ—Ä—Ä–µ–∫—Ü–∏—é
                    .font(.body)
            }
            
            // –ê–¥—Ä–µ—Å (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–µ –ø–æ–ª–µ)
            VStack(alignment: .leading, spacing: 8) {
                Text("–ê–¥—Ä–µ—Å")
                    .font(.headline)
                    .foregroundColor(.primary)
                
                // TextField –ø—Ä–∏–≤—è–∑–∞–Ω –∫ formData.address
                TextField("–ì–æ—Ä–æ–¥, —É–ª–∏—Ü–∞, –¥–æ–º", text: $formData.address)
                    .textFieldStyle(RoundedBorderTextFieldStyle())
                    .font(.body)
            }
            
            // –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –ø–æ–ª—è—Ö
            HStack {
                Image(systemName: "info.circle.fill")
                    .foregroundColor(.green)
                    .font(.caption)
                
                Text("* –û–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è")
                    .font(.caption)
                    .foregroundColor(.secondary)
                
                Spacer()
            }
            .padding(.top, 10)
            
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–µ–∫—É—â–∏–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏ (–º–æ–∂–Ω–æ —É–±—Ä–∞—Ç—å –≤ –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ)
            if !formData.email.isEmpty {
                VStack(alignment: .leading, spacing: 5) {
                    Text("–í–≤–µ–¥–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:")
                        .font(.caption)
                        .foregroundColor(.secondary)
                    
                    if !formData.email.isEmpty {
                        Text("üìß \(formData.email)")
                            .font(.caption)
                            .foregroundColor(.secondary)
                    }
                    
                    if !formData.phone.isEmpty {
                        Text("üì± \(formData.phone)")
                            .font(.caption)
                            .foregroundColor(.secondary)
                    }
                    
                    if !formData.website.isEmpty {
                        Text("üåê \(formData.website)")
                            .font(.caption)
                            .foregroundColor(.secondary)
                    }
                    
                    if !formData.address.isEmpty {
                        Text("üìç \(formData.address)")
                            .font(.caption)
                            .foregroundColor(.secondary)
                    }
                }
                .padding()
                .background(Color.blue.opacity(0.1))
                .cornerRadius(8)
            }
        }
        .padding(.horizontal)
    }
}

// MARK: - –ü—Ä–µ–≤—å—é –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
#Preview {
    // –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –ø—Ä–µ–≤—å—é
    let testFormData = SurveyFormData()
    testFormData.email = "test@example.com"
    testFormData.phone = "+7 123 456 78 90"
    testFormData.website = "https://example.com"
    testFormData.address = "–ú–æ—Å–∫–≤–∞, –ö—Ä–∞—Å–Ω–∞—è –ø–ª–æ—â–∞–¥—å, 1"
    
    return Contacts1(formData: testFormData)
} 
